{"ast":null,"code":"import { ADD_CUSTOMER, GET_CUSTOMER, DELETE_CUSTOMER, UPDATE_CUSTOMER } from \"../action/customer\";\nconst initialstate = {\n  employees: [{\n    id: 1,\n    fname: \"asif\",\n    lname: \"bsit\",\n    email: \"bsit@gmail.com\",\n    phone: \"fff\",\n    address: \"bffffsit\",\n    city: \"fff\",\n    state: \"bsffffit\",\n    zip: \"ffff\",\n    country: \"bffffsit\",\n    company: \"bsit\",\n    comments: \"comments\"\n  }, {\n    id: 2,\n    fname: \"ali\",\n    lname: \"umer\",\n    email: \"dffdfdfdf@gmail.com\",\n    phone: \"dffdf\",\n    address: \"dffdfff\",\n    city: \"ddfdfddf\",\n    state: \"dfdfdfdf\",\n    zip: \"dfdf\",\n    country: \"bdfdfdfsit\",\n    company: \"df\",\n    comments: \"dfdfdf\"\n  }]\n};\n\nconst customer = (state = initialstate, action) => {\n  switch (action.type) {\n    case GET_CUSTOMER:\n      return { ...state\n      };\n\n    case ADD_CUSTOMER:\n      return { ...state,\n        employees: state.employees.concat(action.payload)\n      };\n\n    case DELETE_CUSTOMER:\n      return { ...state,\n        employees: state.employees.filter(item => item.id !== action.payload)\n      };\n\n    case UPDATE_CUSTOMER:\n      return { ...state,\n        employees: state.employees.map(content => content.id === action.payload.id ? { ...content,\n          fname: action.payload.fname,\n          lname: action.payload.lname,\n          email: action.payload.email,\n          phone: action.payload.phone,\n          address: action.payload.address,\n          city: action.payload.city,\n          zip: action.payload.zip,\n          country: action.payload.country,\n          company: action.payload.company,\n          comments: action.payload.comments,\n          store: action.payload.store,\n          credit: action.payload.credit\n        } : content)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default customer;","map":{"version":3,"sources":["/Users/muhammadasif/react-point-of-sale/src/reducer/customer.js"],"names":["ADD_CUSTOMER","GET_CUSTOMER","DELETE_CUSTOMER","UPDATE_CUSTOMER","initialstate","employees","id","fname","lname","email","phone","address","city","state","zip","country","company","comments","customer","action","type","concat","payload","filter","item","map","content","store","credit"],"mappings":"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","sourcesContent":["import {\n  ADD_CUSTOMER,\n  GET_CUSTOMER,\n  DELETE_CUSTOMER,\n  UPDATE_CUSTOMER,\n} from \"../action/customer\";\nconst initialstate = {\n  employees: [\n    {\n      id: 1,\n      fname: \"asif\",\n      lname: \"bsit\",\n      email: \"bsit@gmail.com\",\n      phone: \"fff\",\n      address: \"bffffsit\",\n      city: \"fff\",\n      state: \"bsffffit\",\n      zip: \"ffff\",\n      country: \"bffffsit\",\n      company: \"bsit\",\n      comments: \"comments\",\n    },\n    {\n      id: 2,\n      fname: \"ali\",\n      lname: \"umer\",\n      email: \"dffdfdfdf@gmail.com\",\n      phone: \"dffdf\",\n      address: \"dffdfff\",\n      city: \"ddfdfddf\",\n      state: \"dfdfdfdf\",\n      zip: \"dfdf\",\n      country: \"bdfdfdfsit\",\n      company: \"df\",\n      comments: \"dfdfdf\",\n    },\n  ],\n};\n\nconst customer = (state = initialstate, action) => {\n  switch (action.type) {\n    case GET_CUSTOMER:\n      return {...state};\n    case ADD_CUSTOMER:\n      return {\n        ...state,\n        employees: state.employees.concat(action.payload),\n      };\n    case DELETE_CUSTOMER:\n      return {\n        ...state,\n        employees: state.employees.filter((item) => item.id !== action.payload),\n      };\n    case UPDATE_CUSTOMER:\n      return {\n        ...state,\n        employees: state.employees.map((content) =>\n          content.id === action.payload.id\n            ? {\n                ...content,\n                fname: action.payload.fname,\n                lname: action.payload.lname,\n                email: action.payload.email,\n                phone: action.payload.phone,\n                address: action.payload.address,\n                city: action.payload.city,\n                zip: action.payload.zip,\n                country: action.payload.country,\n                company: action.payload.company,\n                comments: action.payload.comments,\n                store: action.payload.store,\n                credit: action.payload.credit,\n              }\n            : content\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default customer;\n"]},"metadata":{},"sourceType":"module"}