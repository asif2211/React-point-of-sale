{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadasif/react-point-of-sale/src/Pages/Customer/CutomerList/CustomerList.js\";\nimport React, { Component } from \"react\";\nimport * as customer from \"../CutomerList/CustomerList.style\";\nimport ButtonText from \"../../../components/ButtonText/ButtonText\";\nimport { getCustomer } from \"../../../action/customer\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomerList extends Component {\n  componentDidMount() {\n    this.props.getCustomer();\n  }\n\n  render() {\n    const {\n      employees\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(customer.Container, {\n        children: [/*#__PURE__*/_jsxDEV(customer.Grid_item, {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n          children: \"Zip Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), employees && employees.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n            children: item.fname\n          }, index++, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    employees: state.employees\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCustomer\n})(CustomerList);","map":{"version":3,"sources":["/Users/muhammadasif/react-point-of-sale/src/Pages/Customer/CutomerList/CustomerList.js"],"names":["React","Component","customer","ButtonText","getCustomer","connect","CustomerList","componentDidMount","props","render","employees","map","item","index","fname","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAMC,QAAb,MAA2B,mCAA3B;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACnCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,WAAX;AACD;;AACDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKF,KAA3B;AACA,wBACE;AAAA,6BACA,QAAC,QAAD,CAAU,SAAV;AAAA,gCAEI,QAAC,QAAD,CAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,QAAD,CAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,QAAD,CAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,QAAD,CAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,QAAD,CAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,QAAD,CAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI,QAAC,QAAD,CAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI,QAAC,QAAD,CAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI,QAAC,QAAD,CAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI,QAAC,QAAD,CAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI,QAAC,QAAD,CAAU,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,EAaGE,SAAS,IAAIA,SAAS,CAACC,GAAV,CAAc,CAACC,IAAD,EAAMC,KAAN,KAAc;AACxC,8BAEE,QAAC,QAAD,CAAU,SAAV;AAAA,sBAAoCD,IAAI,CAACE;AAAzC,aAAyBD,KAAK,EAA9B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAMD,SAPa,CAbhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AArCkC;;AAwCrC,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLN,IAAAA,SAAS,EAAEM,KAAK,CAACN;AADZ,GAAP;AAGD,CAJD;;AAKA,eAAeL,OAAO,CAACU,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,YAA1C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport *  as customer from \"../CutomerList/CustomerList.style\";\nimport ButtonText from \"../../../components/ButtonText/ButtonText\";\nimport { getCustomer } from \"../../../action/customer\";\nimport { connect } from \"react-redux\";\n\nclass CustomerList extends Component {\n  componentDidMount() {\n    this.props.getCustomer();\n  }\n  render() {\n    const { employees } = this.props;\n    return (\n      <div>\n      <customer.Container>\n       \n          <customer.Grid_item >First Name</customer.Grid_item>\n          <customer.Grid_item >Last Name</customer.Grid_item>\n          <customer.Grid_item >Email</customer.Grid_item>\n          <customer.Grid_item >Phone</customer.Grid_item>\n          <customer.Grid_item >Address</customer.Grid_item>\n          <customer.Grid_item >City</customer.Grid_item>\n          <customer.Grid_item >State</customer.Grid_item>\n          <customer.Grid_item >Zip Code</customer.Grid_item>\n          <customer.Grid_item >Country</customer.Grid_item>\n          <customer.Grid_item >Company</customer.Grid_item>\n          <customer.Grid_item >Action</customer.Grid_item>\n        {employees && employees.map((item,index)=>{\n          return(\n            \n            <customer.Grid_item key={index++} >{item.fname}</customer.Grid_item>\n           \n            \n          )\n        }\n          \n         \n        )}\n        \n       \n      </customer.Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    employees: state.employees,\n  };\n};\nexport default connect(mapStateToProps, { getCustomer })(CustomerList);\n\n"]},"metadata":{},"sourceType":"module"}