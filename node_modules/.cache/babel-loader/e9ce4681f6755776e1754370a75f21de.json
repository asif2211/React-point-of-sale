{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadasif/react-point-of-sale/src/Pages/Customer/CutomerList/CustomerList.js\";\nimport React, { Component } from \"react\";\nimport * as customer from \"../CutomerList/CustomerList.style\";\nimport ButtonText from \"../../../components/ButtonText/ButtonText\";\nimport { getCustomer } from \"../../../action/customer\";\nimport { connect } from \"react-redux\";\nimport { FaPen, FaTrashAlt } from 'react-icons/fa';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CustomerList extends Component {\n  componentDidMount() {\n    this.props.getCustomer();\n  }\n\n  render() {\n    const {\n      employees\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(customer.wrapper, {\n      children: /*#__PURE__*/_jsxDEV(customer.Container, {\n        children: [/*#__PURE__*/_jsxDEV(customer.Grid_item_heading, {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item_heading, {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item_heading, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item_heading, {\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item_heading, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item_heading, {\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item_heading, {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), employees && employees.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(customer.Grid_item, {\n            children: item.fname\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n            children: item.lname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n            children: item.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n            children: item.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n            children: item.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n            children: item.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(customer.Grid_item, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/customer\",\n              children: /*#__PURE__*/_jsxDEV(FaPen, {\n                color: \"green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), \"\\xA0\\xA0\\xA0 \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/customer\",\n              children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {\n                color: \"red\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 105\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 84\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    employees: state.employees\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCustomer\n})(CustomerList);","map":{"version":3,"sources":["/Users/muhammadasif/react-point-of-sale/src/Pages/Customer/CutomerList/CustomerList.js"],"names":["React","Component","customer","ButtonText","getCustomer","connect","FaPen","FaTrashAlt","Link","CustomerList","componentDidMount","props","render","employees","map","item","fname","id","lname","email","phone","address","company","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport *  as customer from \"../CutomerList/CustomerList.style\";\nimport ButtonText from \"../../../components/ButtonText/ButtonText\";\nimport { getCustomer } from \"../../../action/customer\";\nimport { connect } from \"react-redux\";\nimport { FaPen,FaTrashAlt } from 'react-icons/fa';\nimport { Link } from \"react-router-dom\";\nclass CustomerList extends Component {\n  componentDidMount() {\n    this.props.getCustomer();\n  }\n  render() {\n    const { employees } = this.props;\n    return (\n      <customer.wrapper>\n        \n      <customer.Container>\n          <customer.Grid_item_heading >First Name</customer.Grid_item_heading>\n          <customer.Grid_item_heading >Last Name</customer.Grid_item_heading>\n          <customer.Grid_item_heading >Email</customer.Grid_item_heading>\n          <customer.Grid_item_heading >Phone</customer.Grid_item_heading>\n          <customer.Grid_item_heading >Address</customer.Grid_item_heading>\n          <customer.Grid_item_heading >Company</customer.Grid_item_heading>\n          <customer.Grid_item_heading >Action</customer.Grid_item_heading>\n        {employees && employees.map((item)=>\n         \n            <>\n            <customer.Grid_item key={item.id} >{item.fname}</customer.Grid_item>\n            <customer.Grid_item >{item.lname}</customer.Grid_item>\n            <customer.Grid_item >{item.email}</customer.Grid_item>\n            <customer.Grid_item >{item.phone}</customer.Grid_item>\n            <customer.Grid_item >{item.address}</customer.Grid_item>\n          \n            <customer.Grid_item >{item.company}</customer.Grid_item>\n            <customer.Grid_item >\n              <Link to=\"/customer\"><FaPen color=\"green\"/></Link>&nbsp;&nbsp;&nbsp; <Link to=\"/customer\"><FaTrashAlt color=\"red\"/></Link></customer.Grid_item>\n            </>\n         \n        )}\n        \n       \n      </customer.Container>\n      </customer.wrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    employees: state.employees,\n  };\n};\nexport default connect(mapStateToProps, { getCustomer })(CustomerList);\n\n"]},"metadata":{},"sourceType":"module"}